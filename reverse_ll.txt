/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head == nullptr) return nullptr;
        ListNode* current = head;
        while(current -> next != nullptr){
        current = current -> next;
        }
        ListNode* newhead = new ListNode;
        newhead = current;
        ListNode* runner = head;
        while(current != head && runner != head){
            runner = head;
            while(1){
            if(runner -> next == current){
                current -> next = runner;
                break;
            }
            runner = runner -> next;
            }
        current = current -> next;}
        current -> next = nullptr;
    return newhead;}
};